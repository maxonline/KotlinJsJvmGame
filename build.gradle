buildscript {
    repositories {
        jcenter()
    }
}

plugins {
        id 'org.jetbrains.kotlin.multiplatform' version '1.3.70'
}
repositories {
    mavenLocal()
    jcenter()
    maven { url "http://nexus.astraeus.nl/nexus/content/groups/public" }
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
    mavenCentral()
}
def ktor_version = '1.1.3'
def logback_version = '1.2.3'

kotlin {
    jvm()
    js {
        browser {
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation "org.jetbrains.kotlinx:kotlinx-io:0.1.15"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation "io.ktor:ktor-server-netty:$ktor_version"
                implementation "io.ktor:ktor-html-builder:$ktor_version"
                implementation "io.ktor:ktor-websockets:$ktor_version"
                implementation "ch.qos.logback:logback-classic:$logback_version"
                implementation "org.jetbrains.kotlinx:kotlinx-io-jvm:0.1.15"
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
                implementation "org.jetbrains.kotlinx:kotlinx-io-js:0.1.15"
                implementation npm("text-encoding", "0.7.0") //needed by kotlinx-io-js:0.1.15
                implementation "perses.games:kudens:1.1.68-SNAPSHOT"
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
    }
}

jvmJar {
    dependsOn(jsBrowserProductionWebpack)
    from(new File(jsBrowserProductionWebpack.entry.name, jsBrowserProductionWebpack.outputPath))
}

task run(type: JavaExec, dependsOn: [jvmJar]) {
    group = "application"
    main = "maxonline.server.MainKt"
    classpath(configurations.jvmRuntimeClasspath, jvmJar)
    args = []
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs += [
                "-Xuse-experimental=kotlin.ExperimentalUnsignedTypes",
        ]
    }
}

